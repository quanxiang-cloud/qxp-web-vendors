System.register([],(function(e){"use strict";return{execute:function(){e("toKeyPathPair",(function(e,t){return o(e,[],t)}));var t=(e=>(e.GET="get",e.PUT="put",e.POST="post",e.DELETE="delete",e.OPTIONS="options",e.HEAD="head",e.PATCH="patch",e))(t||{});const n=e("METHODS",Object.values(t));function o(e,t,n){return"object"!=typeof e||null===e?[]:(Object.entries(e).forEach((([r,a])=>{const s=n?`${n}.${r}`:r;!function(e){return"boolean"==typeof e||"number"==typeof e||"string"==typeof e||null===e}(a)?function(e){return"object"==typeof e&&null!==e}(e)&&o(e[r],t,s):t.push([s,a])})),t)}e("SwaggerSpecAdapter",class{constructor(e){this.operationMap=function(e){const t={};for(const[o,r]of Object.entries(e.paths||{}))if(r)for(const e of n){const n=r[e];n&&(t[`${e}:${o}`]=n)}return t}(e),this.spec=e}build(e,t){var n;const[o,r]=e.split(":"),a=this.operationMap[e];if(!a)throw new Error(`can not find operation for path: ${r}, method: ${o}.`);let s=function(...e){const t=e.reduce(((e,t)=>{const n=t.replace(/^\//,"").replace(/\/$/,"");if(!n)return e;const o=n.split("/");return e.concat(o)}),[]),n=[];for(const e of t)"."!==e&&(".."!==e?n.push(e):n.pop());return`/${n.join("/")}`}(this.spec.basePath||"",r);const c={},i={};return null==(n=a.parameters)||n.forEach((e=>{var n,o,r;"$ref"in e||("path"===e.in&&(null==(n=null==t?void 0:t.params)?void 0:n[e.name])&&(s=s.replace(`{${e.name}}`,t.params[e.name])),"query"===e.in&&void 0!==(null==(o=null==t?void 0:t.params)?void 0:o[e.name])&&(c[e.name]=t.params[e.name]),"header"===e.in&&void 0!==(null==(r=null==t?void 0:t.params)?void 0:r[e.name])&&(i[e.name]=t.params[e.name]))})),{method:o,url:s,queryParams:c,headers:i,body:null==t?void 0:t.body}}})}}}));
