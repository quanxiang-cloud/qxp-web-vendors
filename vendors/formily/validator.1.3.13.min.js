System.register(["@formily/shared"],(function(e){"use strict";var i,t,a,r,n,s,m,o,u,l,d,f,h,c,g;return{setters:[function(e){i=e.FormPath,t=e.merge,a=e.log,r=e.globalThisPolyfill,n=e.each,s=e.isStr,m=e.stringLength,o=e.isFn,u=e.isBool,l=e.toArr,d=e.isArr,f=e.isValid,h=e.isEmpty,c=e.isObj,g=e.reduce}],execute:function(){const p=i.getIn,v=r,x={messages:{},lang:v.navigator&&(v.navigator.browserlanguage||v.navigator.language)||"en"},b=e("setValidationLocale",(e=>{x.messages=t(x.messages,e)})),T=(e("setLocale",b),e("setValidationLanguage",(e=>{x.lang=e}))),w=(e("setLanguage",T),e("getMessage",(e=>{const i=p(x.messages,`${(e=>{let i=x.lang;return x.messages[e]?e:(n(x.messages,((t,a)=>{if(a.indexOf(e)>-1||String(e).indexOf(a)>-1)return i=a,!1})),i)})(x.lang)}.${e}`);return i||a.error(`field is not valid,but not found ${e} error message. Please set the language pack first through setValidationLocale`),i||"Field is invalid"})));b({en:{pattern:"This field  does not match any pattern",required:"This field is required",number:"This field is not a number",integer:"This field is not an integer number",url:"This field is a invalid url",email:"This field is not a email format",ipv6:"This field is not a ipv6 format",ipv4:"This field is not a ipv4 format",idcard:"This field is not an idcard format",taodomain:"This field is not a taobao domain format",qq:"This field is not a qq number format",phone:"This field is not a phone number format",money:"This field is not a currency format",zh:"This field is not a chinese string",date:"This field is not a valid date format",zip:"This field is not a zip format",len:"The length or number of entries must be {{len}}",min:"The length or number of entries must be at least {{min}}",maximum:"The value cannot be greater than {{maximum}}",exclusiveMaximum:"The value must be less than {{exclusiveMaximum}}",minimum:"The value cannot be less than {{minimum}}",exclusiveMinimum:"The value must be greater than {{exclusiveMinimum}}",max:"The length or number of entries must be at most {{max}}",whitespace:"This field cannot be blank string."},zh:{pattern:"该字段不是一个合法的字段",required:"该字段是必填字段",number:"该字段不是合法的数字",integer:"该字段不是合法的整型数字",url:"该字段不是合法的url",email:"该字段不是合法的邮箱格式",ipv6:"该字段不是合法的ipv6格式",ipv4:"该字段不是合法的ipv4格式",idcard:"该字段不是合法的身份证格式",taodomain:"该字段不符合淘系域名规则",qq:"该字段不符合QQ号格式",phone:"该字段不是有效的手机号",money:"该字段不是有效货币格式",zh:"该字段不是合法的中文字符串",date:"该字段不是合法的日期格式",zip:"该字段不是合法的邮编格式",len:"长度或条目数必须为{{len}}",min:"长度或条目数不能小于{{min}}",max:"长度或条目数不能大于{{max}}",maximum:"数值不能大于{{maximum}}",exclusiveMaximum:"数值必须小于{{exclusiveMaximum}}",minimum:"数值不能小于{{minimum}}",exclusiveMinimum:"数值必须大于{{exclusiveMinimum}}",whitespace:"不能为纯空白字符串"},"en-US":{pattern:"This field  does not match any pattern",required:"This field is required",number:"This field is not a number",integer:"This field is not an integer number",url:"This field is a invalid url",email:"This field is not a email format",ipv6:"This field is not a ipv6 format",ipv4:"This field is not a ipv4 format",idcard:"This field is not an idcard format",taodomain:"This field is not a taobao domain format",qq:"This field is not a qq number format",phone:"This field is not a phone number format",money:"This field is not a currency format",zh:"This field is not a chinese string",date:"This field is not a valid date format",zip:"This field is not a zip format",len:"The length or number of entries must be {{len}}",min:"The length or number of entries must be at least {{min}}",maximum:"The value cannot be greater than {{maximum}}",exclusiveMaximum:"The value must be less than {{exclusiveMaximum}}",minimum:"The value cannot be less than {{minimum}}",exclusiveMinimum:"The value must be greater than {{exclusiveMinimum}}",max:"The length or number of entries must be at most {{max}}",whitespace:"This field cannot be blank string."},"zh-CN":{pattern:"该字段不是一个合法的字段",required:"该字段是必填字段",number:"该字段不是合法的数字",integer:"该字段不是合法的整型数字",url:"该字段不是合法的url",email:"该字段不是合法的邮箱格式",ipv6:"该字段不是合法的ipv6格式",ipv4:"该字段不是合法的ipv4格式",idcard:"该字段不是合法的身份证格式",taodomain:"该字段不符合淘系域名规则",qq:"该字段不符合QQ号格式",phone:"该字段不是有效的手机号",money:"该字段不是有效货币格式",zh:"该字段不是合法的中文字符串",date:"该字段不是合法的日期格式",zip:"该字段不是合法的邮编格式",len:"长度或条目数必须为{{len}}",min:"长度或条目数不能小于{{min}}",max:"长度或条目数不能大于{{max}}",maximum:"数值不能大于{{maximum}}",exclusiveMaximum:"数值必须小于{{exclusiveMaximum}}",minimum:"数值不能小于{{minimum}}",exclusiveMinimum:"数值必须大于{{exclusiveMinimum}}",whitespace:"不能为纯空白字符串"},"zh-TW":{pattern:"該字段不是一個合法的字段",required:"該字段是必填字段",number:"該字段不是合法的數字",integer:"該字段不是合法的整型數字",url:"該字段不是合法的url",email:"該字段不是合法的郵箱格式",ipv6:"該字段不是合法的ipv6格式",ipv4:"該字段不是合法的ipv4格式",idcard:"該字段不是合法的身份證格式",taodomain:"該字段不符合淘系域名規則",qq:"該字段不符合QQ號格式",phone:"該字段不是有效的手機號",money:"該字段不是有效貨幣格式",zh:"該字段不是合法的中文字符串",date:"該字段不是合法的日期格式",zip:"該字段不是合法的郵編格式",len:"長度或條目數必須為{{len}}",min:"長度或條目數不能小於{{min}}",max:"長度或條目數不能大於{{max}}",maximum:"數值不能大於{{maximum}}",exclusiveMaximum:"數值必須小於{{exclusiveMaximum}}",minimum:"數值不能小於{{minimum}}",exclusiveMinimum:"數值必須大於{{exclusiveMinimum}}",whitespace:"不能為純空白字符串"},ja:{url:"このフィールドは無効なURLです",whitespace:"このフィールドを空の文字列にすることはできません。",zh:"このフィールドは中国語の文字列ではありません",zip:"このフィールドはzip形式ではありません",date:"このフィールドは有効な日付形式ではありません",email:"このフィールドはメール形式ではありません",exclusiveMaximum:"値は{{exclusiveMaximum}}未満である必要があります",exclusiveMinimum:"値は{{exclusiveMinimum}}より大きい必要があります",idcard:"このフィールドはIDカード形式ではありません",integer:"このフィールドは整数ではありません",ipv4:"このフィールドはIPv4形式ではありません",ipv6:"このフィールドはIPv6形式ではありません",len:"エントリの長さまたは数は{{len}}でなければなりません",max:"エントリの長さまたは数は最大{{max}}でなければなりません",maximum:"値は{{最大}}を超えることはできません",min:"エントリの長さまたは数は、少なくとも{{min}}である必要があります",minimum:"値は{{minimum}}以上にする必要があります",money:"このフィールドは通貨形式ではありません",number:"このフィールドは数値ではありません",pattern:"このフィールドはどのパターンとも一致しません",phone:"このフィールドは電話番号の形式ではありません",qq:"このフィールドはqq数値形式ではありません",required:"この項目は必須です",taodomain:"このフィールドは淘宝網ドメイン形式ではありません"}});var y={url:new RegExp("^(?:(?:(?:https?|ftp|rtmp):)?//)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:22[0-3]|2[01]\\d|[1-9]\\d?|1\\d\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1?\\d{1,2})){2}(?:\\.(?:25[0-4]|2[0-4]\\d|1\\d\\d|[1-9]\\d?))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:/?\\S*)?$"),email:/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/,ipv6:/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/,ipv4:/^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})$/,number:/^[+-]?\d+(\.\d+)?$/,integer:/^[+-]?\d+$/,qq:/^(\+?[1-9]\d*|0)$/,phone:/^\d{3}-\d{8}$|^\d{4}-\d{7}$|^\d{11}$/,idcard:/^\d{15}$|^\d{17}(\d|x|X)$/,taodomain:/^(https?\:)?(\/\/)?([a-zA-Z0-9\.\-]+\.)?(taobao|tmall|alitrip|yao\.95095)(\.daily)?\.(com|net|hk(\/hk)?)/,money:/^([\u0024\u00A2\u00A3\u00A4\u20AC\u00A5\u20B1\20B9\uFFE5]\s*)(\d+,?)+\.?\d*\s*$/,zh:/^[\u4e00-\u9fa5]+$/,date:/^(?:(?:1[6-9]|[2-9][0-9])[0-9]{2}([-/.]?)(?:(?:0?[1-9]|1[0-2])\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\1(?:29|30)|(?:0?[13578]|1[02])\1(?:31))|(?:(?:1[6-9]|[2-9][0-9])(?:0[48]|[2468][048]|[13579][26])|(?:16|[2468][048]|[3579][26])00)([-/.]?)0?2\2(?:29))(\s+([01][0-9]:|2[0-3]:)?[0-5][0-9]:[0-5][0-9])?$/,zip:/^[0-9]{6}$/};const M=e=>{if(d(e)){for(let i=0;i<e.length;i++)if(f(e[i]))return!1;return!0}return h(e)},q=e=>s(e)?m(e):e?e.length:0,F=(e,i,t)=>{const a=Object.keys(t||{}),r=Object.keys(e||{});return o(e.validator)||(n=r,s=a,n.filter((e=>s.includes(e)))).length>2?e.format&&e.message||w(i):e.message||w(i);var n,s};var A={required:(e,i,t)=>!1===i.required?"":M(e)?F(i,"required",t):"",max:(e,i,t)=>q(e)>Number(i.max)?F(i,"max",t):"",maximum:(e,i,t)=>Number(e)>Number(i.maximum)?F(i,"maximum",t):"",exclusiveMaximum:(e,i,t)=>Number(e)>=Number(i.exclusiveMaximum)?F(i,"exclusiveMaximum",t):"",minimum:(e,i,t)=>Number(e)<Number(i.minimum)?F(i,"minimum",t):"",exclusiveMinimum:(e,i,t)=>Number(e)<=Number(i.exclusiveMinimum)?F(i,"exclusiveMinimum",t):"",len:(e,i,t)=>q(e)!==Number(i.len)?F(i,"len",t):"",min:(e,i,t)=>q(e)<Number(i.min)?F(i,"min",t):"",pattern:(e,i,t)=>M(e)||new RegExp(i.pattern).test(e)?"":F(i,"pattern",t),async validator(e,i,t){if(o(i.validator)){const a=await Promise.resolve(i.validator(e,i,t));return u(a)?a?i.message:"":a||""}throw new Error("The rule's validator property must be a function.")},whitespace(e,i,t){if(i.whitespace)return/^\s+$/.test(e)?F(i,"whitespace",t):""},enum:(e,i,t)=>-1===l(i.enum).indexOf(e)?F(i,"enum",t):""},z=Object.defineProperty,$=Object.defineProperties,P=Object.getOwnPropertyDescriptors,S=Object.getOwnPropertySymbols,O=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable,E=(e,i,t)=>i in e?z(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t,j=(e,i)=>{for(var t in i||(i={}))O.call(i,t)&&E(e,t,i[t]);if(S)for(var t of S(i))N.call(i,t)&&E(e,t,i[t]);return e},R=(e,i)=>$(e,P(i));const k={},L={},V=(e,t)=>s(e)?o(Q.template)?Q.template(e,t):e.replace(/\{\{\s*([\w.]+)\s*\}\}/g,((e,a)=>i.getIn(t,a))):!c(e)||e.$$typeof||e._owner?e:V(e.message,t),I=class{constructor(e={}){this.validate=(e,t)=>{const a=i.getPath(e||"*");return this.validateNodes(a,t)},this.register=(e,t)=>{const a=i.getPath(e);this.nodes[a.toString()]=e=>new Promise(((i,r)=>{let n;Promise.resolve(t((async(i,t)=>{const r=R(j({},e),{key:a.toString()});return this.internalValidate(i,this.transformRules(t),r).then((e=>(n=e,e)),(e=>(n=e,Promise.reject(e))))}))).then((()=>{i(n)}),(()=>{r(n)}))}))},this.unregister=e=>{const t=i.getPath(e);delete this.nodes[t.toString()]},this.validateFirst=e.validateFirst,this.matchStrategy=e.matchStrategy,this.nodes={}}transformRules(e){if(s(e)){if(!L[e])throw new Error("Can not found validator pattern");return[{pattern:L[e],message:w(e)||"Can not found validator message."}]}if(o(e))return[{validator:e}];if(d(e))return e.reduce(((e,i)=>e.concat(this.transformRules(i))),[]);if(c(e)){if(e.format){if(!L[e.format])throw new Error("Can not found validator pattern");e.pattern=L[e.format],e.message=e.message||w(e.format)}return[e]}return[]}async internalValidate(e,i,t={}){const a=f(t.first)?!!t.first:!!this.validateFirst,r=[],n=[];try{for(let t=0;t<i.length;t++){const m=i[t],o=Object.keys(m).sort((e=>"validator"===e?1:-1));for(let i=0;i<o.length;i++){const t=o[i];if(m.hasOwnProperty(t)&&f(m[t])){const i=k[t];if(i){const t=await i(e,m,k),o=V(t,R(j({},m),{rule:m,value:e}));if(s(t)||t.$$typeof&&t._owner){if(a&&o)throw r.push(o),new Error(o);o&&r.push(o)}else if(c(t))if("warning"===t.type)o&&n.push(o);else{if(a&&o)throw r.push(o),new Error(o);o&&r.push(o)}}}}}return{errors:r,warnings:n}}catch(e){return{errors:r,warnings:n}}}async validateNodes(e,i){let t=[],r=[];try{const a=e.toString(),n=this.nodes[a],s=n?{[a]:n}:this.nodes;return await Promise.all(g(s,((a,n,s)=>(o(this.matchStrategy)?this.matchStrategy(e,s):e.match(s))?a.concat(n(i).then((e=>{e.errors.length&&(t=t.concat({path:s.toString(),messages:e.errors})),e.warnings.length&&(r=r.concat({path:s.toString(),messages:e.warnings}))}))):a),[])),{errors:t,warnings:r}}catch(e){return a.error(e),{errors:t,warnings:r}}}static registerRules(e){n(e,((e,i)=>{o(e)&&(k[i]=e)}))}static registerFormats(e){n(e,((e,i)=>{(s(e)||e instanceof RegExp)&&(L[i]=new RegExp(e))}))}};let Q=e("FormValidator",I);Q.registerMTEngine=e=>{o(e)&&(I.template=e)},Q.registerFormats(y),Q.registerRules(A)}}}));
